{"version":3,"sources":["webpack:///./src async","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = ./src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../node_modules/css-loader/index.js??ref--5-1!../../node_modules/postcss-loader/index.js??postcss!@angular/material/prebuilt-themes/purple-green.css\"), \"\");\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/icon?family=Material+Icons);\", \"\"]);\n\n// module\nexports.push([module.id, \"@include mat-core();\\n\\ntd {\\n\\twidth: 40px;\\n\\theight: 40px;\\n}\\n\\n.size-input {\\n\\tmax-width: 42px;\\n}\\n\\n.cell-size-input {\\n\\tmax-width: 60px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = 1","module.exports = \"<md-card>\\n\\t<md-card-content>\\n\\t\\tSelected Color:\\n\\t\\t<input type=\\\"color\\\" (change)=\\\"colorSelected()\\\"  [(ngModel)]=\\\"selectedColor\\\" style=\\\"width:60px;\\\">\\n\\t\\t<br>\\n\\t\\tRecent Colors:\\n\\t\\t<table>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<td [style.background]=\\\"recentColor1\\\" (click)=\\\"recentSelected(recentColor1)\\\"></td>\\n\\t\\t\\t\\t<td [style.background]=\\\"recentColor2\\\" (click)=\\\"recentSelected(recentColor2)\\\"></td>\\n\\t\\t\\t\\t<td [style.background]=\\\"recentColor3\\\" (click)=\\\"recentSelected(recentColor3)\\\"></td>\\n\\t\\t\\t</tr>\\n\\t\\t</table>\\n\\t\\t<br>\\n\\t\\t<md-input-container class=\\\"cell-size-input\\\">\\n\\t\\t\\t<input mdInput placeholder=\\\"Cell Size\\\" [(ngModel)]=\\\"cellSize\\\" />\\n\\t\\t</md-input-container>\\n\\t\\t<br>\\n\\t\\t<md-input-container class=\\\"size-input\\\">\\n\\t\\t\\t<input mdInput placeholder=\\\"Width\\\" [(ngModel)]=\\\"width\\\" />\\n\\t\\t</md-input-container>\\n\\t\\t<md-input-container class=\\\"size-input\\\">\\n\\t\\t\\t<input mdInput placeholder=\\\"Height\\\" [(ngModel)]=\\\"height\\\" />\\n\\t\\t</md-input-container>\\n\\t\\t<button md-button (click)=\\\"changeSize()\\\" >Update</button>\\n\\t<!-- It might be a good idea to use a material 2 table once one exists -->\\n\\t\\t<table>\\n        \\t<tr *ngFor=\\\"let cellRow of cellGrid\\\">\\n        \\t\\t<td \\n        \\t\\t\\t*ngFor=\\\"let cell of cellRow\\\" \\n        \\t\\t\\t[style.width]=\\\"cellSize + 'px'\\\" \\n        \\t\\t\\t[style.height]=\\\"cellSize + 'px'\\\" \\n        \\t\\t\\t[style.background]=\\\"cell.selected ? cell.color : '#ffffff'\\\" \\n        \\t\\t\\t(click)=\\\"selectCell(cell)\\\"\\n        \\t\\t>\\n        \\t\\t</td>\\n        \\t</tr>\\n        </table>\\n    </md-card-content>\\n</md-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n    cellGrid: cell[][] = new Array();\n    width: number = 5;\n    height: number = 5;\n    cellSize: number = 50;\n    selectedColor: string = \"#ff0000\";\n    recentColor1: string = \"#ff0000\";\n    recentColor2: string = \"#00ffffff\";\n    recentColor3: string = \"#00ffffff\";\n\n    ngOnInit() {\n        for (var i = 0; i < this.height; i++) {\n            let row = new Array();\n            for (var j = 0; j < this.width; j++) {\n                row.push(new cell(false));\n            }\n            this.cellGrid.push(row);\n        }\n    }\n\n    selectCell(selectedCell: cell) {\n        selectedCell.selected = !selectedCell.selected;\n        selectedCell.color = this.selectedColor;\n    }\n\n    colorSelected() {\n        this.recentColor3 = this.recentColor2;\n        this.recentColor2 = this.recentColor1;\n        this.recentColor1 = this.selectedColor;\n    }\n\n    recentSelected(recentColor: string) {\n        if (this.recentColor1 != recentColor) {\n            this.selectedColor = recentColor;\n            this.colorSelected();\n        }\n    }\n\n    changeSize() {\n        let heightDiff = this.height - this.cellGrid.length;\n        for (let i = 0; i < this.cellGrid.length; i++) {\n            let row = this.cellGrid[i];\n            let diff = this.width - row.length;\n            if (diff > 0) {\n                for (let j = 0; j < diff; j++) {\n                    row.push(new cell(false));\n                }\n            } else {\n                for (var k = diff; k < 0; k++) {\n                    row.pop();\n                }\n            }\n        }\n\n        if (heightDiff > 0) {\n            for (let i = 0; i < heightDiff; i++) {\n                let row = new Array();\n                for (var j = 0; j < this.width; j++) {\n                    row.push(new cell(false));\n                }\n                this.cellGrid.push(row);\n            }\n        } else {\n            for (var j = heightDiff; j < 0; j++) {\n                this.cellGrid.pop();\n            }\n        }\n    }\n}\n\nexport class cell {\n    constructor(selected?: boolean) {\n        this.selected = selected;\n    }\n    selected: boolean;\n    color: string;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule, MdCardModule } from '@angular/material';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        MaterialModule,\n        MdCardModule,\n        FormsModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":""}