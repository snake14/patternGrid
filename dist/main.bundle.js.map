{"version":3,"sources":["webpack:///./src async","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/pattern-grid.service.ts","webpack:///./src/app/pattern-grid/pattern-grid.component.css","webpack:///./src/app/pattern-grid/pattern-grid.component.html","webpack:///./src/app/pattern-grid/pattern-grid.component.ts","webpack:///./src/app/pattern-list/pattern-list.component.css","webpack:///./src/app/pattern-list/pattern-list.component.html","webpack:///./src/app/pattern-list/pattern-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,iD;;;;;;;ACNA;AACA;AACA;AACA,8FAA+F;;AAE/F;AACA,6CAA8C;;AAE9C;;;AAGA;AACA,2C;;;;;;;ACZA,yF;;;;;;;;;;;;;;;;;ACA0C;AACkB;AAQ5D,IAAa,YAAY;IAAzB;IAEA;IAAA;AAAA;AAFa,YAAY;IANxB,yFAAS,CAAC;QACP,QAAQ,EAAE,UAAU;QACpB,6DAAmC;QACnC,4DAAkC;QAClC,SAAS,EAAE,CAAC,iFAAkB,CAAC;KAClC,CAAC;GACW,YAAY,CAEzB;AAFyB;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACsC;AACd;AACpB;AACU;AACZ;AAEI;AAC8B;AACA;AAE7E,IAAM,SAAS,GAAW;IACtB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kGAAoB,EAAE;IAC7C,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,kGAAoB,EAAE;IACxD,EAAE,IAAI,EAAE,wBAAwB,EAAE,SAAS,EAAE,kGAAoB,EAAE;CACtE,CAAC;AAoBF,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IAlBrB,sFAAQ,CAAC;QACN,YAAY,EAAE;YACV,oEAAY;YACZ,kGAAoB;YACpB,kGAAoB;SACvB;QACD,OAAO,EAAE;YACL,gFAAa;YACb,qGAAuB;YACvB,yEAAc;YACd,uEAAY;YACZ,mEAAW;YACX,iEAAU;YACV,qEAAY,CAAC,OAAO,CAAC,SAAS,CAAC;SAClC;QACD,SAAS,EAAE,EAAE;QACb,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC5B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;ACpCqB;AACN;AACA;AAGrC,IAAa,kBAAkB;IAE3B,4BAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IAEnC,kDAAkD;IAClD,4CAAe,GAAf;QACI,IAAI,GAAG,GAAG,mBAAmB,CAAC;QAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;aACpB,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACtB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,2BAA2B;IAC3B,2CAAc,GAAd,UAAe,SAAiB;QAC5B,IAAI,GAAG,GAAG,mBAAmB,GAAG,SAAS,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;aACpB,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACtB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,0BAA0B;IAC1B,uCAAU,GAAV,UAAW,WAAgB;QACvB,IAAI,GAAG,GAAG,kBAAkB,CAAC;QAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC;aAClC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACtB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,sCAAsC;IACtC,4FAA4F;IAC5F,EAAE;IACF,wDAAwD;IACxD,qCAAqC;IACrC,uCAAuC;IACvC,OAAO;IAEP,oCAAoC;IAE5B,wCAAW,GAAnB,UAAoB,KAAU;QAC1B,MAAM,CAAC,mDAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACnD,CAAC;IACL,yBAAC;AAAD,CAAC;AAzCY,kBAAkB;IAD9B,wFAAU,EAAE;yDAGiB,2DAAI,oBAAJ,2DAAI;GAFrB,kBAAkB,CAyC9B;AAzC8B;;;;;;;;;ACL/B;AACA;AACA;AACA,8FAA+F;;AAE/F;AACA,6CAA8C,QAAQ,gBAAgB,iBAAiB,GAAG,iBAAiB,oBAAoB,GAAG,sBAAsB,oBAAoB,uBAAuB,GAAG;;AAEtM;;;AAGA;AACA,2C;;;;;;;ACZA,gLAAgL,g0C;;;;;;;;;;;;;;;;;;;;;ACA9H;AACO;AAOzD,IAAa,oBAAoB;IAW7B,aAAa;IACb,8BACY,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;QATjC,aAAQ,GAAa,IAAI,KAAK,EAAE,CAAC;QACjC,UAAK,GAAW,CAAC,CAAC;QAClB,WAAM,GAAW,CAAC,CAAC;QACnB,aAAQ,GAAW,EAAE,CAAC;QACtB,kBAAa,GAAW,SAAS,CAAC;QAClC,iBAAY,GAAG,IAAI,KAAK,EAAE,CAAC;IAKvB,CAAC;IAEL,uCAAQ,GAAR;QACI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC3C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACjB,4DAA4D;QAChE,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,wDAAwD;YACxD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACnC,IAAI,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;gBACtB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;oBAClC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC9B,CAAC;gBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC5B,CAAC;QACL,CAAC;IACL,CAAC;IAED,yCAAU,GAAV,UAAW,YAAkB;QACzB,YAAY,CAAC,QAAQ,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC;QAC/C,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;IAC5C,CAAC;IAED,4CAAa,GAAb;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACpD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAClF,CAAC;QACD,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAClD,CAAC;IAED,6CAAc,GAAd,UAAe,WAAmB;QAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,WAAW,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC;YACjC,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC;IACL,CAAC;IAED,0CAAW,GAAX;QACI,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC5C,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC;YACnC,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;gBACX,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC5B,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC9B,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC5B,GAAG,CAAC,GAAG,EAAE,CAAC;gBACd,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IAED,2CAAY,GAAZ;QACI,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QACpD,EAAE,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC;gBAClC,IAAI,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;gBACtB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;oBAClC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC9B,CAAC;gBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC5B,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBAClC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;YACxB,CAAC;QACL,CAAC;IACL,CAAC;IACL,2BAAC;AAAD,CAAC;AApFY,oBAAoB;IALhC,yFAAS,CAAC;QACP,QAAQ,EAAE,kBAAkB;QAC5B,mFAA4C;QAC5C,kFAA2C;KAC9C,CAAC;yDAcqB,uEAAc,oBAAd,uEAAc;GAbxB,oBAAoB,CAoFhC;AApFgC;AAsFjC;IACI,cAAY,QAAkB;QAC1B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAGL;AAAA;;;;;;;;;;ACpGA;AACA;AACA;AACA,8FAA+F;;AAE/F;AACA,6CAA8C,YAAY,wBAAwB,oBAAoB,qBAAqB,GAAG,SAAS,oBAAoB,GAAG,sCAAsC,sBAAsB,GAAG;;AAE7N;;;AAGA;AACA,2C;;;;;;;ACZA,ucAAuc,YAAY,qEAAqE,cAAc,yBAAyB,oBAAoB,KAAK,qBAAqB,oU;;;;;;;;;;;;;;;;;;;;ACA3jB;AACW;AAO7D,IAAa,oBAAoB;IAI7B,8BAAoB,cAAkC;QAAlC,mBAAc,GAAd,cAAc,CAAoB;QAFtD,gBAAW,GAAG,IAAI,CAAC;IAEuC,CAAC;IAE3D,uCAAQ,GAAR;QAAA,iBAGC;QAFG,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE;aAChC,SAAS,CAAC,qBAAW,IAAM,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;IACtE,CAAC;IACL,2BAAC;AAAD,CAAC;AAVY,oBAAoB;IALhC,yFAAS,CAAC;QACP,QAAQ,EAAE,kBAAkB;QAC5B,mFAA4C;QAC5C,kFAA2C;KAC9C,CAAC;yDAKsC,iFAAkB,oBAAlB,iFAAkB;GAJ7C,oBAAoB,CAUhC;AAVgC;;;;;;;;;;ACRjC;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = ./src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../node_modules/css-loader/index.js??ref--5-1!../../node_modules/postcss-loader/index.js??postcss!@angular/material/prebuilt-themes/purple-green.css\"), \"\");\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/icon?family=Material+Icons);\", \"\"]);\n\n// module\nexports.push([module.id, \"@include mat-core();\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\nimport { PatternGridService } from './pattern-grid.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n    providers: [PatternGridService]\n})\nexport class AppComponent {\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule, MdCardModule } from '@angular/material';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { PatternGridComponent } from './pattern-grid/pattern-grid.component';\nimport { PatternListComponent } from './pattern-list/pattern-list.component';\n\nconst appRoutes: Routes = [\n    { path: '', component: PatternListComponent },\n    { path: 'patterngrid', component: PatternGridComponent },\n    { path: 'patterngrid/:patternID', component: PatternGridComponent }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        PatternGridComponent,\n        PatternListComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        MaterialModule,\n        MdCardModule,\n        FormsModule,\n        HttpModule,\n        RouterModule.forRoot(appRoutes)\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from \"rxjs/Rx\";\n\n@Injectable()\nexport class PatternGridService {\n\n    constructor(private http: Http) { }\n\n    // Get the list of pattern grids from the database\n    getPatternGrids() {\n        let url = \"/api/patterngrids\";\n        return this.http.get(url)\n            .map(res => res.json())\n            .catch(this.handleError);\n    }\n\n    // Get a pattern grid by ID\n    getPatternGrid(patternID: string) {\n        let url = \"/api/patterngrid/\" + patternID;\n        return this.http.get(url)\n            .map(res => res.json())\n            .catch(this.handleError);\n    }\n\n    // Post a new pattern grid\n    postVendor(patterngrid: any) {\n        let url = \"/api/patterngrid\";\n        return this.http.post(url, patterngrid)\n            .map(res => res.json())\n            .catch(this.handleError);\n    }\n\n    //    putVendor(updatedVendorConfig) {\n    //        let url = this.custId + \"/vendoraccount/\" + updatedVendorConfig.pvAccountConfigID;\n    //\n    //        return this.http.put(url, updatedVendorConfig)\n    //            .map(res => res.json())\n    //            .catch(this.handleError);\n    //    }\n\n    // Delete pattern grid from database\n\n    private handleError(error: any) {\n        return Observable.throw(JSON.stringify(error));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pattern-grid.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../node_modules/css-loader/index.js??ref--5-1!../../../node_modules/postcss-loader/index.js??postcss!@angular/material/prebuilt-themes/purple-green.css\"), \"\");\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/icon?family=Material+Icons);\", \"\"]);\n\n// module\nexports.push([module.id, \"@include mat-core();\\n\\ntd {\\n\\twidth: 40px;\\n\\theight: 40px;\\n}\\n\\n.size-input {\\n\\tmax-width: 42px;\\n}\\n\\n.cell-size-input {\\n\\tmax-width: 60px;\\n\\tmargin-right: 20px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pattern-grid/pattern-grid.component.css\n// module id = ./src/app/pattern-grid/pattern-grid.component.css\n// module chunks = 1","module.exports = \"<md-card>\\n\\t<md-card-content>\\n\\t\\tSelected Color:\\n\\t\\t<input type=\\\"color\\\" (change)=\\\"colorSelected()\\\"  [(ngModel)]=\\\"selectedColor\\\" style=\\\"width:60px;\\\">\\n\\t\\t<br>\\n\\t\\tRecent Colors:\\n\\t\\t<table>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<td *ngFor=\\\"let recentColor of recentColors\\\" [style.background]=\\\"recentColor\\\" (click)=\\\"recentSelected(recentColor)\\\"></td>\\n\\t\\t\\t</tr>\\n\\t\\t</table>\\n\\t\\t<br>\\n\\t\\t<md-input-container class=\\\"cell-size-input\\\">\\n\\t\\t\\t<input mdInput type=\\\"number\\\" placeholder=\\\"Cell Size\\\" min=\\\"1\\\" [(ngModel)]=\\\"cellSize\\\" />\\n\\t\\t</md-input-container>\\n\\t\\t<md-input-container class=\\\"size-input\\\">\\n\\t\\t\\t<input mdInput type=\\\"number\\\" placeholder=\\\"Width\\\" min=\\\"1\\\" [(ngModel)]=\\\"width\\\" (input)=\\\"widthChange()\\\" />\\n\\t\\t</md-input-container>\\n\\t\\t<md-input-container class=\\\"size-input\\\">\\n\\t\\t\\t<input mdInput type=\\\"number\\\" placeholder=\\\"Height\\\" min=\\\"1\\\" [(ngModel)]=\\\"height\\\" (input)=\\\"heightChange()\\\" />\\n\\t\\t</md-input-container>\\n\\t<!-- It might be a good idea to use a material 2 table once one exists -->\\n\\t\\t<table>\\n        \\t<tr *ngFor=\\\"let cellRow of cellGrid\\\">\\n        \\t\\t<td \\n        \\t\\t\\t*ngFor=\\\"let cell of cellRow\\\" \\n        \\t\\t\\t[style.width]=\\\"cellSize + 'px'\\\" \\n        \\t\\t\\t[style.height]=\\\"cellSize + 'px'\\\" \\n        \\t\\t\\t[style.background]=\\\"cell.selected ? cell.color : '#ffffff'\\\" \\n        \\t\\t\\t(click)=\\\"selectCell(cell)\\\"\\n        \\t\\t>\\n        \\t\\t</td>\\n        \\t</tr>\\n        </table>\\n    </md-card-content>\\n</md-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pattern-grid/pattern-grid.component.html\n// module id = ./src/app/pattern-grid/pattern-grid.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'app-pattern-grid',\n    templateUrl: './pattern-grid.component.html',\n    styleUrls: ['./pattern-grid.component.css']\n})\nexport class PatternGridComponent implements OnInit {\n\n    patternID: number;\n    name: string;\n    cellGrid: cell[][] = new Array();\n    width: number = 5;\n    height: number = 5;\n    cellSize: number = 50;\n    selectedColor: string = \"#ff0000\";\n    recentColors = new Array();\n\n    //Constructor\n    constructor(\n        private route: ActivatedRoute\n    ) { }\n\n    ngOnInit() {\n        this.recentColors.push(this.selectedColor);\n        this.patternID = this.route.snapshot.params['patternID'];\n        if (this.patternID) {\n            // Get the patternGrid from database and populate the values\n        } else {\n            // Since this is a new patternGrid, create an empty grid\n            for (var i = 0; i < this.height; i++) {\n                let row = new Array();\n                for (var j = 0; j < this.width; j++) {\n                    row.push(new cell(false));\n                }\n                this.cellGrid.push(row);\n            }\n        }\n    }\n\n    selectCell(selectedCell: cell) {\n        selectedCell.selected = !selectedCell.selected;\n        selectedCell.color = this.selectedColor;\n    }\n\n    colorSelected() {\n        if (this.recentColors.includes(this.selectedColor, 0)) {\n            this.recentColors.splice(this.recentColors.indexOf(this.selectedColor, 0), 1);\n        }\n        this.recentColors.unshift(this.selectedColor);\n    }\n\n    recentSelected(recentColor: string) {\n        if (this.selectedColor != recentColor) {\n            this.selectedColor = recentColor;\n            this.colorSelected();\n        }\n    }\n\n    widthChange() {\n        for (let i = 0; i < this.cellGrid.length; i++) {\n            let row = this.cellGrid[i];\n            let diff = this.width - row.length;\n            if (diff > 0) {\n                for (let j = 0; j < diff; j++) {\n                    row.push(new cell(false));\n                }\n            } else {\n                for (var k = diff; k < 0; k++) {\n                    row.pop();\n                }\n            }\n        }\n    }\n\n    heightChange() {\n        let heightDiff = this.height - this.cellGrid.length;\n        if (heightDiff > 0) {\n            for (let i = 0; i < heightDiff; i++) {\n                let row = new Array();\n                for (var j = 0; j < this.width; j++) {\n                    row.push(new cell(false));\n                }\n                this.cellGrid.push(row);\n            }\n        } else {\n            for (var j = heightDiff; j < 0; j++) {\n                this.cellGrid.pop();\n            }\n        }\n    }\n}\n\nexport class cell {\n    constructor(selected?: boolean) {\n        this.selected = selected;\n    }\n    selected: boolean;\n    color: string;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pattern-grid/pattern-grid.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../node_modules/css-loader/index.js??ref--5-1!../../../node_modules/postcss-loader/index.js??postcss!@angular/material/prebuilt-themes/purple-green.css\"), \"\");\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/icon?family=Material+Icons);\", \"\"]);\n\n// module\nexports.push([module.id, \"@include mat-core();\\n\\ntd, th {\\n\\tpadding-right: 20px;\\n\\tmin-width: 40px;\\n\\ttext-align: left;\\n}\\n\\n.id {\\n\\tmin-width: 10px;\\n}\\n\\n.mat-card-header .mat-card-title {\\n    font-size: 40px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pattern-list/pattern-list.component.css\n// module id = ./src/app/pattern-list/pattern-list.component.css\n// module chunks = 1","module.exports = \"<md-card class=\\\"mat-card-table\\\">\\n\\t<md-card-header class=\\\"no-card-subtitle\\\">\\n\\t\\t<md-card-title>Saved Pattern Grids</md-card-title>\\n\\t</md-card-header>\\n\\t<md-card-content> <!-- @todo once material 2 has a data table use it -->\\n\\t\\t<table>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<th class=\\\"id\\\">ID</th>\\n\\t\\t\\t\\t<th>Name</th>\\n\\t\\t\\t\\t<th>Dimensions</th>\\n\\t\\t\\t</tr>\\n\\t\\t\\t<tr *ngFor=\\\"let pattern of allPatterns\\\">\\n\\t\\t\\t\\t<td class=\\\"id\\\">{{pattern.id}}</td>\\n\\t\\t\\t\\t<td><a (click)=\\\"selectPattern(pattern.patternID)\\\">{{pattern.name}}</a></td>\\n\\t\\t\\t\\t<td>{{pattern.grid_width}} x {{pattern.grid_height}}</td>\\n\\t\\t\\t</tr>\\n\\t\\t</table>\\n\\t\\t<div *ngIf=\\\"!allPatterns || allPatterns.length == 0\\\">No patterns to display. Please create a new one...</div>\\n\\t\\t<button md-button routerLink=\\\"patterngrid\\\">\\n\\t\\t\\t<md-icon>add_circle</md-icon>\\n\\t\\t\\t<span>New pattern grid</span>\\n\\t\\t</button>\\n\\t</md-card-content>\\n</md-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pattern-list/pattern-list.component.html\n// module id = ./src/app/pattern-list/pattern-list.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { PatternGridService } from '../pattern-grid.service';\n\n@Component({\n    selector: 'app-pattern-list',\n    templateUrl: './pattern-list.component.html',\n    styleUrls: ['./pattern-list.component.css']\n})\nexport class PatternListComponent implements OnInit {\n\n    allPatterns = null;\n\n    constructor(private patternService: PatternGridService) { }\n\n    ngOnInit() {\n        this.patternService.getPatternGrids()\n            .subscribe(allPatterns => { this.allPatterns = allPatterns; })\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pattern-list/pattern-list.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":""}